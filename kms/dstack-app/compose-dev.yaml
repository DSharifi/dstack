services:
  auth-api:
    build:
      context: .
      dockerfile_inline: |
        FROM node:18-alpine@sha256:06f7bbbcec00dd10c21a3a0962609600159601b5004d84aff142977b449168e9
        WORKDIR /app

        RUN apk add --no-cache git
        RUN git clone https://github.com/Dstack-TEE/dstack.git && \
            cd dstack && \
            git checkout ${GIT_REV}
        WORKDIR /app/dstack/kms/auth-eth
        RUN npm install
        RUN npx tsc --project tsconfig.json
        CMD node dist/src/main.js
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - ETH_RPC_URL=${ETH_RPC_URL}
      - KMS_CONTRACT_ADDR=${KMS_CONTRACT_ADDR}
    restart: unless-stopped
    ports:
      - 8001:8000

  kms:
    build:
      context: .
      dockerfile_inline: |
        FROM golang:1.22-alpine@sha256:1699c10032ca2582ec89a24a1312d986a3f094aed3d5c1147b19880afe40e052 AS dstack-mr-builder
        WORKDIR /app
        RUN apk add --no-cache git
        RUN git clone https://github.com/kvinwang/dstack-mr.git
        WORKDIR /app/dstack-mr
        RUN git checkout 5cf6d917e076f3624eab1b6b662f222ece15600f
        RUN CGO_ENABLED=0 go build -ldflags="-extldflags -static" -o /usr/local/bin/dstack-mr

        FROM rust:1.86.0@sha256:300ec56abce8cc9448ddea2172747d048ed902a3090e6b57babb2bf19f754081 AS kms-builder
        WORKDIR /app
        RUN apt-get update && apt-get install -y \
            git \
            build-essential \
            musl-tools \
            libssl-dev \
            protobuf-compiler \
            libprotobuf-dev \
            clang \
            libclang-dev \
            --no-install-recommends \
            && rm -rf /var/lib/apt/lists/*
        RUN git clone https://github.com/Dstack-TEE/dstack.git && \
            cd dstack && \
            git checkout ${GIT_REV}
        WORKDIR /app/dstack
        RUN rustup target add x86_64-unknown-linux-musl
        RUN cargo build --release -p dstack-kms --target x86_64-unknown-linux-musl

        FROM alpine:latest
        COPY --from=kms-builder /app/dstack/target/x86_64-unknown-linux-musl/release/dstack-kms /usr/local/bin/dstack-kms
        COPY --from=kms-builder /app/dstack/kms/dstack-app/entrypoint.sh /entrypoint.sh
        COPY --from=dstack-mr-builder /usr/local/bin/dstack-mr /usr/local/bin/dstack-mr
        WORKDIR /app/kms
        CMD ["/entrypoint.sh"]
    volumes:
      - kms-volume:/etc/kms
      - /var/run/dstack.sock:/var/run/dstack.sock
    environment:
      - IMAGE_DOWNLOAD_URL=${IMAGE_DOWNLOAD_URL}
      - ADMIN_TOKEN_HASH=${ADMIN_TOKEN_HASH}
    ports:
      - 8000:8000
    depends_on:
      - auth-api
    restart: unless-stopped

volumes:
  kms-volume:
